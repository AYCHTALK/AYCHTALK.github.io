const n=[];let t,o;function r(){return!!t}function u(n){const o=t,r=()=>{};t=r,a(r);const u=n(()=>{S(r),t=void 0});return t=o,u}function c(n){const o=t;t=void 0;const r=n();return t=o,r}function i(t){o=[];const r=t();let u=o;return o=void 0,u.forEach(t=>{if(t.t!==n){const o=t.t;t.t=n,t(o)}}),r}function e(r){function u(c){if(0===arguments.length)return t&&!u.o.has(t)&&(u.o.add(t),t.u.push(u)),r;if(o)return u.t===n&&o.push(u),u.t=c,c;r=c;const i=t;return t=void 0,u.i=new Set(u.o),u.i.forEach(n=>n.s=!1),u.i.forEach(n=>{n.s||n()}),t=i,r}return u.$o=1,u.o=new Set,u.t=n,u}function f(n,o){function r(){const u=t;t&&t.v.push(r);const c=r.v;return S(r),r.s=!0,t=r,o=n(o),c.forEach(n=>{-1===r.v.indexOf(n)&&(n.s=!0)}),function n(t){return t.reduce((t,o)=>t.concat(o,n(o.v)),[])}(r.v).forEach(n=>{n.s&&n.u.forEach(t=>{t.i&&t.i.delete(n)})}),t=u,o}return n.S=r,a(r),r(),function(){return r.s?r.u.forEach(n=>n()):o=r(),o}}function s(n){return t&&t.l.push(n),n}function d(n){return f(n),()=>S(n.S)}function v(n){S(n.S)}function S(n){n.v.forEach(S),n.u.forEach(t=>{t.o.delete(n)}),n.l.forEach(n=>n()),a(n)}function a(n){n.u=[],n.v=[],n.l=[]}export{f as S,s as cleanup,f as computed,r as isListening,e as o,e as observable,u as root,c as sample,d as subscribe,i as transaction,v as unsubscribe};
