const n=[];let t;function o(n){const o=()=>n;return o.$t=(n,c,u,e)=>{const r=(1===n?function(n,t){return(o,c)=>{n(o,c,null,t)}}:function(n,t){return(o,c)=>{n(t,c,o)}})(c,e);r.t=o,r.o=u,t.push(r)},o}function c(n){const t=o(n);return t.u=1,t}function u(o){t=[];const c=document.createDocumentFragment();c.appendChild(o()),t.forEach(t=>{t.l=[];let o,c=t.o;for(;o=c.parentNode;)t.l.unshift(n.indexOf.call(o.childNodes,c)),c=o});const u=t;return t=null,function(n){const t={},o=c.cloneNode(!0);o.firstChild.props=n;for(let c=0;c<u.length;c++){let r=u[c];const l=r.l;let f=o,s=0;for(;s<l.length;){f=f.firstChild;const n=l[s];let t=0;for(;t<n;)f=f.nextSibling,t+=1;s+=1}const i=r.t,b=i(),d=n[b];null!=d&&r(f,d),i.u&&(t[b]||e(n,b,d,t[b]=[]),t[b].push(r.bind(null,f)))}return o}}function e(n,t,o,c){Object.defineProperty(n,t,{get:()=>o,set(n){o=n,c.forEach(t=>t(n))}})}export{c as o,o as t,u as template};
