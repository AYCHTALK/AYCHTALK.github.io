import{api as n}from"../sinuous.js";const o=[];function t(t,e){const{subscribe:c,root:u,cleanup:s}=n;let r=document.createDocumentFragment();const i=r.appendChild(document.createTextNode("")),f=r.appendChild(document.createTextNode("")),l=new Map;function d(n){let o=l.get(n);o&&o(),l.delete(n)}return s(c(n=>{n=n||[];const c=t()||[],s=new Map,m=new Map;let p,a;r=f.parentNode;const w=o.slice.call(r.childNodes),M=o.indexOf.call(w,i),b=o.indexOf.call(w,f);for(p=0;p<n.length;p++)s.set(n[p],p);for(p=0;p<c.length;p++)m.set(c[p],p);for(p=a=0;p!==n.length||a!==c.length;){const o=n[p],t=c[a];if(null===o)p++;else if(c.length<=a)d(r.removeChild(v(p))),p++;else if(n.length<=p)r.insertBefore(j(t,a),v(p)||f),a++;else if(o===t)p++,a++;else{const e=m.get(o),c=s.get(t);void 0===e?(d(r.removeChild(v(p))),p++):void 0===c?(r.insertBefore(j(t,a),v(p)||f),a++):(r.insertBefore(v(c),v(p)||f),n[c]=null,a++)}}function v(n){const o=M+n+1;return o>M&&o<b&&w[o]}function j(n,o){return u(t=>(n=(n=e(n,o))instanceof Node?n:document.createTextNode(n),l.set(n,t),n))}return c.slice()})),s(function(){l.forEach(n=>n()),l.clear()}),r}export{t as map};
